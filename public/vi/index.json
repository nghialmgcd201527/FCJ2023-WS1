[
{
	"uri": "/vi/",
	"title": "Session Management",
	"tags": [],
	"description": "",
	"content": "Triển khai ứng dụng \u0026ldquo;Todo app\u0026rdquo; với Serverless Tổng quan Trong bài workshop này, chúng ta sẽ tạo một ứng dụng \u0026ldquo;Todo app\u0026rdquo; bằng Serverless cùng API để lưu trữ và truy xuất dữ liệu trên Cloud. Ngoài ra, chúng ta sẽ kết hợp Machine Learning để xác định những từ khóa liên quan đến images mà các bạn tải lên cho từng Task.\nNội dung Giới thiệu Các bước chuẩn bị Tạo kết nối đến máy chủ EC2 Quản lý session logs Port Forwarding Dọn dẹp tài nguyên "
},
{
	"uri": "/vi/4-s3log/4.1-updateiamrole/",
	"title": "Cập nhật IAM Role",
	"tags": [],
	"description": "",
	"content": "Để các EC2 instance của chúng ta có thể gửi session log tới S3 bucket , chúng ta sẽ cần cập nhật IAM Role đã gán vào EC2 instance bằng cách thêm vào policy cho phép quyền truy cập vào S3.\nCập nhật IAM Role Truy cập vào giao diện quản trị dịch vụ IAM Click Roles. Tại ô tìm kiếm , điền SSM. Click vào role SSM-Role. Click Attach policies. Tại ô Search điền S3. Click chọn policy AmazonS3FullAccess. Click Attach policy. Trong thực tế chúng ta sẽ cấp quyền chặt chẽ hơn tới S3 bucket chỉ định. Trong khuôn khổ bài lab này chúng ta sử dụng policy AmazonS3FullAccess cho tiện dụng.\nTiếp theo chúng ta sẽ tiến hành tạo S3 bucket để lưu trữ session logs.\n"
},
{
	"uri": "/vi/1-introduce/",
	"title": "Giới thiệu",
	"tags": [],
	"description": "",
	"content": "Mô hình kiến trúc của ứng dụng Todo app sử dụng AWS Lamba, Amazon API Gateway, Amazon DynamoDB, Amazon Simple Storage Service (S3) và AWS Amplify Console. Amplify Console được dùng để phục vụ cho việc triển khai liên tục (Continuos Deployment - CD) và quản lí tài nguyên cho một trang web tĩnh bao gồm HTML, CSS, JavaScript và file ảnh được tải lên từ người dùng trên trình duyệt. Trong đó, JavaScript thực thi việc gửi và nhận dữ liệu từ một public backend API được xây dựng bởi Lambda và API Gateway. DynamoDB cung cấp persistence layer nơi mà dữ liệu được lưu trữ bằng Lambda function từ API. S3 được sử dụng để lưu trữ các file image được tải lên. Và cuối cùng là Amazon Rekognition, được dùng để nhận diện những thuộc tính và gắn các thuộc tính đó vào những file image trên.\n"
},
{
	"uri": "/vi/3-serverlessbackend/3.1-dynamodb/",
	"title": "Kết nối đến máy chủ Public",
	"tags": [],
	"description": "",
	"content": "\nTruy cập vào giao diện quản trị của dịch vụ EC2. Click chọn Public Linux Instance. Click Actions. Click Security. Click Modify IAM role. Tại trang Modify IAM role. Click chọn SSM-Role. Click Save. Bạn sẽ cần chờ khoảng 10 phút trước khi thực hiện bước tiếp theo. Thời gian này EC2 instance của chúng ta sẽ tự động đăng ký với Session Manager.\nTruy cập vào giao diện quản trị của dịch vụ AWS Systems Manager Kéo thanh trượt menu bên trái xuống dưới. Click Session Manager. Click Start Session. Sau đó chọn Public Linux Instance và click Start session để truy cập vào instance. Terminal sẽ xuất hiện trên trình duyệt. Kiểm tra với câu lệnh sudo tcpdump -nn port 22 và sudo tcpdump chúng ta sẽ thấy không có traffic của SSH mà chỉ có traffic HTTPS. Ở trên, chúng ta đã tạo kết nối vào public instance mà không cần mở cổng SSH 22, giúp cho việc bảo mật tốt hơn, tránh mọi sự tấn công tới cổng SSH.\nMột nhược điểm của cách làm trên là ta phải mở Security Group outbound ở cổng 443 ra ngoài internet. Vì là public instance nên có thể sẽ không vấn đề gì nhưng nếu bạn muốn bảo mật hơn nữa, bạn có thể khoá cổng 443 ra ngoài internet mà vẫn sử dụng được Session Manager. Chúng ta sẽ đi qua cách làm này ở phần private instance dưới đây.\nBạn có thể terminate để kết thúc session đang kết nối trước khi qua bước tiếp theo.\n"
},
{
	"uri": "/vi/2-prerequiste/2.1-createcloud9workspace/",
	"title": "Tạo Cloud9 Workspace",
	"tags": [],
	"description": "",
	"content": "Khởi tạo Cloud9 Nhập Cloud9 ở thanh tìm kiếm service trên AWS Console sau đó chọn Cloud9. Chọn Create environment Đặt tên cho Cloud9 Workspace là serverless-workshop. Ở mục Description hãy nhập mục đích bạn muốn sử dụng trong workspace này. Nhập deploy \u0026ldquo;Todos app\u0026rdquo; Environment type, ở đây chúng ta sẽ tạo một server để chạy Cloud9 workspace này. Mình sẽ chọn option New EC2 instance để tạo một server mới. Sang phần setting cho New EC2 instance, chọn Additional instance types sau đó chúng ta chọn loại t3.medium. Giữ nguyên mặc định cho những thiết lập khác. Click Create và đợi khoảng 10 phút để Cloud9 Workspace được tạo. Khi Cloud9 Workspace được tạo xong, chúng ta sẽ có một môi trường để làm việc với AWS CLI và các công cụ khác.\nTrong danh sách các Environments được tạo ra, hãy tìm environment serverless-workshop và click vào nút Open để mở môi trường Cloud9. Sau khi môi trường mở ra, chúng ta hãy tắt những phần bên dưới đã được khởi tạo lúc bắt đầu và tạo một trang terminal mới. Workspace của chúng ta sẽ trông như thế này.\n"
},
{
	"uri": "/vi/2-prerequiste/",
	"title": "Các bước chuẩn bị",
	"tags": [],
	"description": "",
	"content": "\rHãy nhớ rằng Cloud9 workspace chỉ nên được tạo ra bởi IAM user (hoặc là được gán vào một IAM role thích hợp) với đặc quyền của Admin, không được dùng root user.\nCloud9 Workspace Chúng ta thường dùng môi trường phát triển tích hợp (Integrated Development Environment - IDE) ở local, trong bài workshop này, chúng ta sẽ dùng Cloud9. Nó là một IDE chạy trên cloud sử dụng trình duyệt, bao gồm những tính năng quan trọng, thiết yếu ở local IDE mà chúng ta thường dùng như viết, chạy, debug code. Cloud9 đã được trang bị sẵn những gói tệp tin như JavaScript, Python, NodeJS và những thứ khác ở đây\nĐể các dịch vụ của AWS phản hồi nhanh hơn, hãy chọn Region gần nhất trong suốt buổi workshop.\nCác vùng hỗ trợ service Amazon Rekognition Hãy lưu ý rằng không phải tất cả các service của AWS luôn có sẵn tại tất cả các vùng. Trong bài workshop này, chúng ta sẽ sử dụng service Amazon Rekognition, nó sẽ chỉ phục vụ cho các vùng dưới đây:\nUS East (Ohio) us-east-2 US East (N. Virginia) us-east-1 US West (N. California) us-west-1 US West (Oregon) us-west-2 Asia Pacific (Mumbai) ap-south-1 Asia Pacific (Seoul) ap-northeast-2 Asia Pacific (Singapore) ap-southeast-1 Asia Pacific (Sydney) ap-southeast-2 Asia Pacific (Tokyo) ap-northeast-1 Canada (Central) ca-central-1 Europe (Frankfurt) eu-central-1 Europe (Ireland) eu-west-1 Europe (London) eu-west-2 Xem thêm cập nhật mới nhất về Amazon Rekognition\nNội dung Tạo Cloud9 Workspace Cài đặt Amplify CLI "
},
{
	"uri": "/vi/2-prerequiste/2.2-ensurenodejsversion/",
	"title": "Ensure Node.js Version",
	"tags": [],
	"description": "",
	"content": "Cloud9 đã cài đặt sẵn Node.js nhưng có thể nó sẽ không tương thích với thời điểm mình làm bài workshop này. Để đảm bảo được điều này, các bạn hãy cài đặt Node.js v16 (codename Gallium) bằng cách chạy lệnh sau trong terminal của Cloud9.\nChúng ta hãy kiểm tra phiên bản Node.js hiện tại đang chạy trên Cloud9 bằng lệnh sau:\nnode --version Đây là phiên bản Node.js mà mình đang sử dụng trong workshop này.\nNếu phiên bản Node.js mà bạn đang sử dụng là v16.x thì bạn có thể bỏ qua bước này và đến phần Clone Git repository. Nếu phiên bản mà bạn đang sử dụng khác phiên bản trên thì hãy theo dõi các bước sau để cài đặt phiên bản Node.js phù hợp với workshop này bằng trang terminal vừa tạo.\nỞ trang terminal trên Cloud9, hãy chạy lệnh sau để đảm bảo rằng bạn đã cài đặt phiên bản mới nhất của Node.js Version Manager (nvm) (ở thời điểm mình viết workshop, đang là version 0.39.0).\ncurl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.2/install.sh | bash Tiếp theo chúng ta sẽ cài đặt Node.js v16 \u0026ldquo;Gallium\u0026rdquo;:\nnvm install \u0026#39;lts/gallium\u0026#39; Cuối cùng, chúng ta sẽ chọn phiên bản Node.js trên là phiên bản mặc định:\nnvm alias default \u0026#39;lts/gallium\u0026#39; Hãy xem lại phiên bản Node.js đang chạy trên Cloud9 bằng lệnh sau:\nnode --version Kết quả chúng ta cần là bắt đầu bằng v16.\n"
},
{
	"uri": "/vi/3-serverlessbackend/3.2-lambdafunction/",
	"title": "Tạo kết nối đến máy chủ EC2 Private",
	"tags": [],
	"description": "",
	"content": "Đối với Windows instance nằm trong private subnet, không có public IP, không có internet gateway nên không thể đi ra ngoài internet.\nVới loại instance này, cách làm truyền thống là ta sẽ sử dụng kỹ thuật Bastion host tốn nhiều chi phí và công sức, nhưng ở đây chúng ta sẽ sử dụng Session Manager với loại này.\nCơ bản là private instance vẫn phải mở cổng TCP 443 tới System Manager, nhưng không cho kết nối đó đi ra ngoài internet mà chỉ cho đi trong chính VPC của mình, nên đảm bảo được vấn đề bảo mật.\nĐể làm được điều đó, ta phải đưa endpoint của System Manager vào trong VPC, nghĩa là sử dụng VPC interface endpoint:\nVPC interface endpoint được gắn với subnet nên cách làm này không những với private subnet mà còn có thể làm với public subnet, nghĩa là với public subnet, bạn hoàn toàn có thể không cho TCP 443 đi ra ngoài internet.\nNội dung: Kích hoạt DNS hostnames Tạo VPC Endpoint Kết nối Private Instance "
},
{
	"uri": "/vi/4-s3log/4.2-creates3bucket/",
	"title": "Tạo S3 Bucket",
	"tags": [],
	"description": "",
	"content": "Trong bước này, chúng ta sẽ tạo 1 S3 bucket để lưu trữ các session logs được gửi từ các EC2 instance.\nTạo S3 Bucket Truy cập giao diện quản trị dịch vụ S3 Click Create bucket. Tại trang Create bucket. Tại mục Bucket name điền tên bucket lab-yourname-bucket-0001 Tại mục Region chọn Region bạn đang làm lab hiện tại. Tên S3 bucket phải đảm bảo không trùng với toàn bộ S3 bucket khác trong hệ thống. Bạn có thể thay thế tên mình và điền số ngẫu nhiên khi tạo tên S3 bucket.\nKéo chuột xuống phía dưới và click Create bucket. Khi tạo S3 bucket chúng ta đã thực hiện Block all public access nên các EC2 instance của chúng ta sẽ không thể kết nối tới S3 thông qua mạng internet. Trong bước tiếp theo chúng ta sẽ cấu hình tính năng S3 Gateway Endpoint để cho phép các EC2 instance có thể kết nối tới S3 bucket thông qua mạng nội bộ của VPC.\n"
},
{
	"uri": "/vi/2-prerequiste/2.3-clonerepositoryandavoidingfreespace/",
	"title": "Clone Git repository và vấn đề của dung lượng trống Cloud9",
	"tags": [],
	"description": "",
	"content": "Ở trang terminal trên Cloud9, chạy command sau để để clone Git repository serverless-tasks-webapp:\ngit clone https://github.com/aws-samples/serverless-tasks-webapp Sau khi chạy câu lệnh trên, chúng ta sẽ được như hình. Chúng ta sẽ thấy thư mục serverless-tasks-webapp được tạo ra.\nTránh những vấn đề liên quan đến dung lượng trống của Cloud9 Mặc định, dung lượng trống của một Cloud9 instance chỉ tầm khoảng 2GB. Dùng đoạn script dưới đây để tránh tình trạng hết dung lượng và vấn đề trong suốt buổi workshop.\nĐầu tiên, chúng ta sẽ cập nhật phiên bản mới nhất của AWS CLI:\npip install --user --upgrade awscli aws-sam-cli Nếu cập nhật thành công, chúng ta sẽ thấy như hình bên dưới:\nChuyển đến thư mục serverless-tasks-webapp, kiểm tra dung lượng của volume hiện tại bằng lệnh sau:\ncd serverless-tasks-webapp\rdf -h Chúng ta sẽ nhận được kết quả như hình bên dưới:\nfilesystem ở đường dẫn /dev/nvme0n1p1 là volume mà chúng ta đang sử dụng. Chúng ta sẽ thấy dung lượng trống của volume này là 3.5G. Để tránh tình trạng hết dung lượng trong suốt buổi workshop, chúng ta sẽ tăng dung lượng của volume này lên 20G.\nTăng kích thước volume của Amazon EBS lên 20G:\nbash resize.sh 20 Chúng ta sẽ thay output như này:\nBây giờ hãy kiểm tra lại dung lượng của volume hiện tại bằng lệnh sau:\ndf -h Như chúng ta thấy ở đường dẫn /dev/nvme0n1p1, dung lượng trống của volume hiện tại đã tăng lên 14G.\n"
},
{
	"uri": "/vi/3-serverlessbackend/",
	"title": "Tạo kết nối đến máy chủ EC2",
	"tags": [],
	"description": "",
	"content": "Trong bước này, chúng ta sẽ thực hiện tạo kết nối đến các máy chủ EC2 của chúng ta, nằm trong cả public và private subnet.\nNội dung 3.1. Tạo Kết nối đến máy chủ EC2 Public 3.2. Tạo Kết nối đến máy chủ EC2 Private\n"
},
{
	"uri": "/vi/4-s3log/4.3-creategwes3/",
	"title": "Tạo S3 Gateway endpoint",
	"tags": [],
	"description": "",
	"content": " Truy cập vào giao diện quản trị dịch vụ VPC Click Endpoints. Click Create endpoint. Tại trang Create endpoint. Tại mục Name tag điền S3GW. Tại mục Service Category click chọn AWS services. Tại ô tìm kiếm điền S3, sau đó chọn com.amazonaws.[region].s3 Tại mục Services chọn com.amazonaws.[region].s3 có Type là Gateway. Tại mục VPC , chọn Lab VPC. Tại mục Route tables, chọn cả 2 route table. Kéo chuột xuống dưới cùng, click Create endpoint. Bước tiếp theo chúng ta sẽ tiến hành cấu hình Session Manager để có thể lưu trữ các session logs tới S3 bucket chúng ta đã tạo.\n"
},
{
	"uri": "/vi/2-prerequiste/2.4-installamplifycli/",
	"title": "Cài đặt Amplify CLI",
	"tags": [],
	"description": "",
	"content": "Theo AWS, Amplify là một dịch vụ được thiết kế để giúp các nhà phát triển xây dựng các ứng dụng web và mobile nhanh hơn. Amplify cung cấp một tập hợp các công cụ và dịch vụ để xây dựng các ứng dụng web và mobile. Amplify CLI là một phần của Amplify Framework, nó cung cấp các lệnh để tạo và quản lý các tài nguyên AWS như Amazon Cognito, Amazon API Gateway, Amazon Lambda function, Amazon DynamoDB table, và Amazon S3 bucket.\nTrong workshop này, chúng ta sẽ chỉ cấu hình AWS Amplify Hosting, nó cung cấp một dịch vụ có thể quản lí dễ dàng cho việc triển khai các ứng dụng web tĩnh trên toàn cầu. Nó sẽ sử dụng Amazon S3 và Amazon CloudFornt để lưu trữ và phân phối các tài nguyên tĩnh của ứng dụng đó.\nCài đặt phiên bản mới nhất của Amplify CLI bằng cách chạy command sau: npm i -g @aws-amplify/cli Hoàn tất cài đặt Amplify CLI.\nSau khi tải xong, hãy cấu hình cho Amplify CLI: amplify configure Chúng ta sẽ nhận được một đường dẫn https://console.aws.amazon.com/ để đăng nhập vào AWS console.\nSau khi đăng nhập, nhấn Enter và chọn Region mà bạn đang làm workshop, với mình là ap-southeast-1. Sau đó nhấn Enter để tiếp tục, chúng ta sẽ nhận được một đường dẫn https://console.aws.amazon.com/iamv2/home#/users/create để tạo một user IAM mới.\nTruy cập vào đường dẫn trên, đặt tên amplify-user cho user đó, chọn Next.\nMặc định, chúng ta sẽ gán quyền AdministratorAccess cho user được cấu hình cho Amplify CLI\nỞ section Permmissions options, chọn Attach policies directly. Tìm và chọn AdministratorAccess. Sau đó nhấn Next. Ở trang Review and create, chọn Create user.\nTiếp theo, chọn user vừa được tạo amplify-user, chọn tab Security credentials, ở mục Access keys, click vào Create access key.\nỞ bước Access key best practices \u0026amp; alternatives, chọn Command Line Interface (CLI) và tick vào mục Confirm sau đó chọn Next.\nỞ trang Set description tag, hãy nhập mô tả cho Access key tùy theo ý của bạn, mình để mặc định và chọn Create access key. Vậy là bạn đã tạo thành công Access key cho user amplify-user, lưu lại Access key và Secret access key. Quay trở lại terminal ở Cloud9, nhấn Enter, nó sẽ yêu cầu mình nhập Access key và Secret access key vừa tạo. Sau khi nhập xong, nhấn Enter, ở mục Profile name, mình sẽ để default, nhấn tiếp Enter, vậy là đã cấu hình thành công Amplify CLI.\nBây giờ chúng ta đã sẵn sàng để sử dụng Amplify!\n"
},
{
	"uri": "/vi/4-s3log/",
	"title": "Quản lý session logs",
	"tags": [],
	"description": "",
	"content": "Với Session Manager chúng ta có thể xem được lịch sử các kết nối tới các instance thông qua Session history. Tuy nhiên chúng ta chưa xem được chi tiết các câu lệnh được sử dụng.\nTrong phần này chúng ta sẽ tiến hành tạo S3 bucket và thực hiện cấu hình lưu trữ các session logs để xem được chi tiết các câu lệnh được sử dụng trong session.\nNội dung: Cập nhật IAM Role Tạo S3 Bucket Tạo S3 Gateway endpoint Cấu hình Session logs "
},
{
	"uri": "/vi/4-s3log/4.4-configsessionlogs/",
	"title": "Theo dõi session logs",
	"tags": [],
	"description": "",
	"content": "Theo dõi session logs Truy cập giao diện quản trị dịch vụ System Manager - Session Manager Click tab Preferences. Click Edit. Kéo chuột xuống phía dưới, tại mục S3 logging, click chọn Enable. Bỏ chọn Allow only encrypted S3 buckets. Click chọn Choose a bucket name from the list. Chọn S3 bucket bạn đã tạo. Kéo chuột xuống phía dưới, click Save để lưu cấu hình.\nTruy cập giao diện quản trị dịch vụ System Manager - Session Manager\nClick Start session. Click chọn Private Windows Instance. Click Start session. Gõ lệnh ipconfig. Gõ lệnh hostname. Click Terminate để thoát session, click Terminate 1 lần nữa để xác nhận. Kiểm tra Session logs trong S3 Truy cập vào giao diện quản trị dịch vụ S3 Click vào tên S3 bucket chúng ta đã tạo cho bài lab. Click vào tên file sessions log Tại trang chi tiết objects , click Open. File logs sẽ được mở ở 1 tab mới trên trình duyệt.Bạn có thể xem các câu lệnh đã được lưu trữ lại trong session logs. "
},
{
	"uri": "/vi/5-portfwd/",
	"title": "Port Forwarding",
	"tags": [],
	"description": "",
	"content": "\rPort Forwarding là mốt cách thức hữu ích để chuyển hướng lưu lượng mạng từ 1 địa chỉ IP - Port này sang 1 địa chỉ IP - Port khác. Với Port Forwarding chúng ta có thể truy cập một EC2 instance nằm trong private subnet từ máy trạm của chúng ta.\nChúng ta sẽ cấu hình Port Forwarding cho kết nối RDP giữa máy của mình với Private Windows Instance nằm trong private subnet mà chúng ta đã tạo cho bài thực hành này.\nTạo IAM User có quyền kết nối SSM Truy cập vào giao diện quản trị dịch vụ IAM Click Users , sau đó click Add users. Tại trang Add user. Tại mục User name, điền Portfwd. Click chọn Access key - Programmatic access. Click Next: Permissions. Click Attach existing policies directly. Tại ô tìm kiếm , điền ssm. Click chọn AmazonSSMFullAccess. Click Next: Tags, click Next: Reviews. Click Create user. Lưu lại thông tin Access key ID và Secret access key để thực hiện cấu hình AWS CLI. Cài đặt và cấu hình AWS CLI và Session Manager Plugin Để thực hiện phần thực hành này, đảm bảo máy trạm của bạn đã cài AWS CLI và Session Manager Plugin\nBạn có thể tham khảo thêm bài thực hành về cài đặt và cấu hình AWS CLI tại đây.\nVới Windows thì khi giải nén thư mục cài đặt Session Manager Plugin bạn hãy chạy file install.bat với quyền Administrator để thực hiện cài đặt.\nThực hiện Portforwarding Chạy command dưới đây trong Command Prompt trên máy của bạn để cấu hình Port Forwarding. aws ssm start-session --target (your ID windows instance) --document-name AWS-StartPortForwardingSession --parameters portNumber=\u0026#34;3389\u0026#34;,localPortNumber=\u0026#34;9999\u0026#34; --region (your region) Thông tin Instance ID của Windows Private Instance có thể tìm được khi bạn xem chi tiết máy chủ EC2 Windows Private Instance.\nCâu lệnh ví dụ C:\\Windows\\system32\u0026gt;aws ssm start-session --target i-06343d7377486760c --document-name AWS-StartPortForwardingSession --parameters portNumber=\u0026#34;3389\u0026#34;,localPortNumber=\u0026#34;9999\u0026#34; --region ap-southeast-1 Nếu câu lệnh của bạn báo lỗi như dưới đây : SessionManagerPlugin is not found. Please refer to SessionManager Documentation here: http://docs.aws.amazon.com/console/systems-manager/session-manager-plugin-not-found\nChứng tỏ bạn chưa cài Session Manager Plugin thành công. Bạn có thể cần khởi chạy lại Command Prompt sau khi cài Session Manager Plugin.\nKết nối tới Private Windows Instance bạn đã tạo bằng công cụ Remote Desktop trên máy trạm của bạn. Tại mục Computer: điền localhost:9999. Quay trở lại giao diện quản trị của dịch vụ System Manager - Session Manager. Click tab Session history. Chúng ta sẽ thấy các session logs với tên Document là AWS-StartPortForwardingSession. Chúc mừng bạn đã hoàn tất bài thực hành hướng dẫn cách sử dụng Session Manager để kết nối cũng như lưu trữ các session logs trong S3 bucket. Hãy nhớ thực hiện bước dọn dẹp tài nguyên để tránh sinh chi phí ngoài ý muốn nhé.\n"
},
{
	"uri": "/vi/6-cleanup/",
	"title": "Dọn dẹp tài nguyên  ",
	"tags": [],
	"description": "",
	"content": "Chúng ta sẽ tiến hành các bước sau để xóa các tài nguyên chúng ta đã tạo trong bài thực hành này.\nXóa EC2 instance Truy cập giao diện quản trị dịch vụ EC2 Click Instances. Click chọn cả 2 instance Public Linux Instance và Private Windows Instance. Click Instance state. Click Terminate instance, sau đó click Terminate để xác nhận. Truy cập giao diện quản trị dịch vụ IAM Click Roles. Tại ô tìm kiếm , điền SSM. Click chọn SSM-Role. Click Delete, sau đó điền tên role SSM-Role và click Delete để xóa role. Click Users. Click chọn user Portfwd. Click Delete, sau đó điền tên user Portfwd và click Delete để xóa user. Xóa S3 bucket Truy cập giao diện quản trị dịch vụ System Manager - Session Manager. Click tab Preferences. Click Edit. Kéo chuột xuống dưới. Tại mục S3 logging. Bỏ chọn Enable để tắt tính năng logging. Kéo chuột xuống dưới. Click Save. Truy cập giao diện quản trị dịch vụ S3 Click chọn S3 bucket chúng ta đã tạo cho bài thực hành. ( Ví dụ : lab-fcj-bucket-0001 ) Click Empty. Điền permanently delete, sau đó click Empty để tiến hành xóa object trong bucket. Click Exit. Sau khi xóa hết object trong bucket, click Delete Điền tên S3 bucket, sau đó click Delete bucket để tiến hành xóa S3 bucket. Xóa các VPC Endpoint Truy cập vào giao diện quản trị dịch vụ VPC Click Endpoints. Chọn 4 endpoints chúng ta đã tạo cho bài thực hành bao gồm SSM, SSMMESSAGES, EC2MESSAGES, S3GW. Click Actions. Click Delete VPC endpoints. Tại ô confirm , điền delete. Click Delete để tiến hành xóa các endpoints. Click biểu tượng refresh, kiểm tra tất cả các endpoints đã bị xóa trước khi làm bước tiếp theo. Xóa VPC Truy cập vào giao diện quản trị dịch vụ VPC Click Your VPCs. Click chọn Lab VPC. Click Actions. Click Delete VPC. Tại ô confirm, điền delete để xác nhận, click Delete để thực hiện xóa Lab VPC và các tài nguyên liên quan. "
},
{
	"uri": "/vi/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/vi/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]